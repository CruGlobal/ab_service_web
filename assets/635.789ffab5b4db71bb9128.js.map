{"version":3,"file":"635.789ffab5b4db71bb9128.js","mappings":"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X,OAAOmE,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,mBC1uBN,MAAMC,EACH7d,YAAYmC,GACT9B,KAAK8B,GAAKA,EACV9B,KAAKyd,OAAS,EACjB,CAEAC,SAASxW,EAAM+J,GACZjR,KAAKyd,OAAOpZ,KAAK,CAAE6C,KAAMA,EAAM+J,QAASA,GAC3C,CAEA0M,OACG,OAA6B,GAAtB3d,KAAKyd,OAAOvX,MACtB,CAEAqB,OACG,OAAOvH,KAAKyd,OAAOvX,OAAS,CAC/B,CAEA0X,qBACG,IAAIpG,EAAM,CACPrI,MAAO,eACP0O,kBAAmB,CAAC,GAGnBC,EAAOtG,EAAIqG,kBAOf,OALA7d,KAAKyd,OAAOzZ,SAAS/E,IAClB6e,EAAK7e,EAAEiI,MAAQ4W,EAAK7e,EAAEiI,OAAS,GAC/B4W,EAAK7e,EAAEiI,MAAM7C,KAAKpF,EAAE,IAGhBuY,CACV,CAEAhQ,WAAWwC,GACR,IAAI+T,EAAO/d,KAAK4d,qBAChB5d,KAAK8B,GAAGkc,WAAWC,sBAAsBF,EAAM/T,EAClD,CAEAkU,WAAWC,EAAOC,GACf,IAAIL,EAAO/d,KAAK4d,qBAChB5d,KAAK8B,GAAGkc,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH,MAAME,UAAkB,KACrB3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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupNewDataField.js","webpack://ab_platform_web/./ABDesigner/ab_work_object_workspace_popupSortFields.js","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceView.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewCollection.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/workspaceViews/ABObjectWorkspaceViewKanban.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\nconst ABFieldManager = require(\"../AppBuilder/core/ABFieldManager\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupNewDataField extends (\n   ABComponent\n) {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupNewDataField\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: this.unique(`${idBase}_popNewField`),\n         types: this.unique(`${idBase}_popNewField_types`),\n         editDefinitions: this.unique(`${idBase}_popNewField_editDefinitions`),\n\n         buttonSave: this.unique(`${idBase}_popNewField_buttonSave`),\n         buttonCancel: this.unique(`${idBase}_popNewField_buttonCancel`),\n      };\n\n      // Our webix UI definition:\n      this.ui = {\n         view: \"window\",\n         position: \"center\",\n         id: ids.component,\n         resize: true,\n         modal: true,\n         height: 500,\n         width: 700,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: L(\"Add new field\"),\n                  css: \"modal_title\",\n                  align: \"center\",\n               },\n               {\n                  view: \"button\",\n                  label: L(\"Close\"),\n                  autowidth: true,\n                  align: \"center\",\n                  click: function () {\n                     _logic.buttonCancel();\n                  },\n               },\n            ],\n         },\n         // ready: function () {\n         //  console.error('ready() called!!!')\n         //  _logic.resetState();\n         // },\n\n         body: {\n            view: \"scrollview\",\n            scroll: \"y\",\n            css: \"ab-add-fields-popup\",\n            borderless: true,\n            body: {\n               type: \"form\",\n               rows: [\n                  {\n                     view: \"richselect\",\n                     id: ids.types,\n                     label: L(\"Field type\"),\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     options: [\n                        //We will add these later\n                        { id: \"temporary\", view: \"temporary\" },\n                     ],\n                     on: {\n                        onChange: function (id, ev, node) {\n                           _logic.onChange(id);\n                        },\n                     },\n                  },\n                  {\n                     height: 10,\n                     type: \"line\",\n                  },\n                  {\n                     view: \"multiview\",\n                     id: ids.editDefinitions,\n                     padding: 0,\n                     // NOTE: can't leave this an empty []. We redefine this value later.\n                     cells: [\n                        {\n                           id: \"del_me\",\n                           view: \"label\",\n                           label: L(\"edit definition here\"),\n                        },\n                     ],\n                  },\n                  { height: 10 },\n                  {\n                     cols: [\n                        { fillspace: true },\n                        {\n                           view: \"button\",\n                           value: L(\"Cancel\"),\n                           css: \"ab-cancel-button\",\n                           autowidth: true,\n                           click: function () {\n                              _logic.buttonCancel();\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           id: ids.buttonSave,\n                           label: L(\"Add Column\"),\n                           autowidth: true,\n                           type: \"form\",\n                           click: function () {\n                              _logic.buttonSave();\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         },\n         on: {\n            //onBeforeShow: function () {\n            //  _logic.resetState();\n            //},\n            onHide: function () {\n               _logic.resetState();\n            },\n         },\n      };\n\n      var _objectHash = {}; // 'name' => ABFieldXXX object\n      var _componentHash = {}; // 'name' => ABFieldXXX ui component\n      var _componentsByType = {}; // 'type' => ABFieldXXX ui component\n      var _currentEditor = null;\n      var _currentApplication = null;\n      var _currentObject = null;\n\n      var defaultEditorComponent = null; // the default editor.\n      var defaultEditorID = null; // the default editor id.\n      var submenus = []; // Create the submenus for our Data Fields:\n\n      var _editField = null; // field instance being edited\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         // initialize our components\n         webix.ui(this.ui);\n         webix.extend($$(ids.component), webix.ProgressBar);\n\n         var Fields = ABFieldManager.allFields();\n\n         //// we need to load a submenu entry and an editor definition for each\n         //// of our Fields\n\n         var newEditorList = {\n            view: \"multiview\",\n            id: ids.editDefinitions,\n            animate: false,\n            rows: [],\n         };\n\n         Fields.forEach(function (F) {\n            var menuName = F.defaults().menuName;\n            var key = F.defaults().key;\n\n            // add a submenu for the fields multilingual key\n            submenus.push({ id: menuName, value: menuName });\n\n            // Add the Field's definition editor here:\n            var editorComponent = F.propertiesComponent(App, idBase);\n            if (!defaultEditorComponent) {\n               defaultEditorComponent = editorComponent;\n               defaultEditorID = menuName;\n            }\n            newEditorList.rows.push(editorComponent.ui);\n\n            _objectHash[menuName] = F;\n            _componentHash[menuName] = editorComponent;\n            _componentsByType[key] = editorComponent;\n         });\n\n         // the submenu button has a placeholder we need to remove and update\n         // with one that has all our submenus in it.\n         // var firstID = $$(ids.types).getFirstId();\n         // $$(ids.types).updateItem(firstID, {\n         //  value: labels.component.chooseType,\n         //  submenu: submenus\n         // })\n         $$(ids.types).define(\"options\", submenus);\n         $$(ids.types).refresh();\n\n         // now remove the 'del_me' definition editor placeholder.\n         webix.ui(newEditorList, $$(ids.editDefinitions));\n\n         // init & hide all the unused editors:\n         for (let c in _componentHash) {\n            _componentHash[c].init();\n\n            _componentHash[c].hide();\n         }\n\n         defaultEditorComponent.show(); // show the default editor\n         _currentEditor = defaultEditorComponent;\n\n         // set the richselect to the first option by default.\n         $$(ids.types).setValue(submenus[0].id);\n\n         // $$(ids.editDefinitions).show();\n\n         // $$(ids.editDefinitions).cells() // define the edit Definitions here.\n      };\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         applicationLoad: (application) => {\n            _currentApplication = application;\n\n            // TODO : should load ABApplication to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.applicationLoad\n               ) {\n                  _componentHash[menuName]._logic.applicationLoad(application);\n               }\n            }\n         },\n\n         objectLoad: (object) => {\n            _currentObject = object;\n\n            // TODO : should load current object to data field popup here ?\n            for (var menuName in _componentHash) {\n               if (\n                  _componentHash[menuName] &&\n                  _componentHash[menuName]._logic.objectLoad\n               ) {\n                  _componentHash[menuName]._logic.objectLoad(_currentObject);\n               }\n            }\n         },\n\n         buttonCancel: function () {\n            _logic.resetState();\n\n            // clear all editors:\n            for (var c in _componentHash) {\n               _componentHash[c].clear();\n            }\n\n            // hide this popup.\n            $$(ids.component).hide();\n         },\n\n         buttonSave: async function () {\n            $$(ids.buttonSave).disable();\n            // show progress\n            $$(ids.component).showProgress();\n\n            var editor = _currentEditor;\n            if (editor) {\n               // the editor can define some basic form validations.\n               if (editor.isValid()) {\n                  var vals = this.AB.cloneDeep(editor.values());\n\n                  var field = null;\n                  var oldData = null;\n\n                  var linkCol;\n\n                  // if this is an ADD operation, (_editField will be undefined)\n                  if (!_editField) {\n                     // get a new instance of a field:\n                     field = _currentObject.fieldNew(vals);\n\n                     // Provide a default width based on the column label\n                     var width = 20 + field.label.length * 10;\n                     if (field.settings.showIcon) {\n                        width = width + 20;\n                     }\n                     if (width < 100) {\n                        width = 100;\n                     }\n\n                     field.settings.width = width;\n\n                     // TODO workaround : where should I add a new link field to link object\n                     if (field.key == \"connectObject\") {\n                        let rand = Math.floor(Math.random() * 1000);\n                        field.settings.isSource = 1;\n\n                        var linkObject = field.datasourceLink;\n\n                        // 1:1, 1:M, M:1 should have same column name\n                        let linkColumnName = field.columnName;\n\n                        // check duplicate column\n                        if (\n                           linkObject.fields(\n                              (f) => f.columnName == linkColumnName\n                           ).length\n                        ) {\n                           linkColumnName = `${linkColumnName}${rand}`;\n                        }\n\n                        // M:N should have different column name into the join table\n                        if (\n                           field.settings.linkType == \"many\" &&\n                           field.settings.linkViaType == \"many\"\n                        ) {\n                           // NOTE : include random number to prevent duplicate column names\n                           linkColumnName = `${_currentObject.name}${rand}`;\n                        }\n\n                        linkCol = linkObject.fieldNew({\n                           // id: OP.Util.uuid(),\n\n                           key: field.key,\n\n                           columnName: linkColumnName,\n                           label: _currentObject.label,\n\n                           settings: {\n                              showIcon: field.settings.showIcon,\n\n                              linkObject: field.object.id,\n                              linkType: field.settings.linkViaType,\n                              linkViaType: field.settings.linkType,\n                              isCustomFK: field.settings.isCustomFK,\n                              indexField: field.settings.indexField,\n                              indexField2: field.settings.indexField2,\n                              isSource: 0,\n                              width: width,\n                           },\n                        });\n\n                        // Update link column id to source column\n                        // field.settings.linkColumn = linkCol.id;\n                     }\n                  } else {\n                     // NOTE: update label before .toObj for .unTranslate to .translations\n                     if (vals.label) _editField.label = vals.label;\n\n                     // use our _editField, backup our oldData\n                     oldData = _editField.toObj();\n\n                     // update changed values to old data\n                     var updateValues = this.AB.cloneDeep(oldData);\n                     for (let key in vals) {\n                        // update each values of .settings\n                        if (\n                           key == \"settings\" &&\n                           vals[\"settings\"] &&\n                           typeof vals[\"settings\"] == \"object\"\n                        ) {\n                           updateValues[\"settings\"] =\n                              updateValues[\"settings\"] || {};\n\n                           for (let keySetting in vals[\"settings\"]) {\n                              updateValues[\"settings\"][keySetting] =\n                                 vals[\"settings\"][keySetting];\n                           }\n                        } else {\n                           updateValues[key] = vals[key];\n                        }\n                     }\n\n                     _editField.fromValues(updateValues);\n\n                     field = _editField;\n                  }\n\n                  var validator = field.isValid();\n                  if (validator.fail()) {\n                     validator.updateForm($$(editor.ui.id));\n                     // OP.Form.isValidationError(errors, $$(editor.ui.id));\n\n                     // keep our old data\n                     if (oldData) {\n                        field.fromValues(oldData);\n                     }\n\n                     $$(ids.buttonSave).enable();\n                     $$(ids.component).hideProgress();\n                  } else {\n                     try {\n                        await field.save();\n\n                        let finishUpdateField = () => {\n                           $$(ids.buttonSave).enable();\n                           $$(ids.component).hideProgress();\n                           _currentEditor.clear();\n                           _logic.hide();\n                           _logic.callbacks.onSave(field);\n                        };\n\n                        let refreshModels = () => {\n                           // refresh linked object model\n                           linkCol.object.model().refresh();\n\n                           // refresh source object model\n                           // NOTE: M:1 relation has to refresh model after linked object's refreshed\n                           field.object.model().refresh();\n                        };\n\n                        // TODO workaround : update link column id\n                        if (linkCol != null) {\n                           linkCol.settings.linkColumn = field.id;\n                           await linkCol.save();\n\n                           // now linkCol has an .id, so update our field:\n                           field.settings.linkColumn = linkCol.id;\n                           await field.save();\n\n                           // when add new link fields, then run create migrate fields here\n                           if (!_editField) {\n                              await field.migrateCreate();\n                              await linkCol.migrateCreate();\n                           }\n\n                           refreshModels();\n                           finishUpdateField();\n                        } else {\n                           finishUpdateField();\n                        }\n                     } catch (err) {\n                        // if (\n                        //    OP.Validation.isFormValidationError(\n                        //       err,\n                        //       $$(editor.ui.id)\n                        //    )\n                        // ) {\n                        //    // for validation errors, keep things in place\n                        //    // and let the user fix the data:\n                        //    $$(ids.buttonSave).enable();\n                        //    $$(ids.component).hideProgress();\n                        // } else {\n                        //    var errMsg = err.toString();\n                        //    if (err.message) {\n                        //       errMsg = err.message;\n                        //    }\n                        //    webix.alert({\n                        //       title: \"Error saving fields.\",\n                        //       ok: \"tell appdev\",\n                        //       text: errMsg,\n                        //       type: \"alert-error\",\n                        //    });\n                        //    // Q: if not validation error, do we\n                        //    // then field.destroy() ? and let them try again?\n                        //    // $$(ids.buttonSave).enable();\n                        //    // $$(ids.component).hideProgress();\n                        // }\n                     }\n                  }\n               } else {\n                  $$(ids.buttonSave).enable();\n                  $$(ids.component).hideProgress();\n               }\n            } else {\n               this.AB.notify.developer(\n                  new Error(\"Could not find the current editor.\"),\n                  {}\n               );\n\n               $$(ids.buttonSave).enable();\n               $$(ids.component).hideProgress();\n            }\n\n            // if (!inputValidator.validateFormat(fieldInfo.name)) {\n            //  self.enable();\n            //  return;\n            // }\n\n            // // Validate duplicate field name\n            // var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n            // if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n            //  webix.alert({\n            //      title: labels.add_fields.duplicateFieldTitle,\n            //      text: labels.add_fields.duplicateFieldDescription,\n            //      ok: labels.common.ok\n            //  });\n            //  this.enable();\n            //  return;\n            // }\n\n            // if (fieldInfo.weight == null)\n            //  fieldInfo.weight = dataTable.config.columns.length;\n\n            // // Call callback function\n            // if (base.saveFieldCallback && base.fieldName) {\n            //  base.saveFieldCallback(base.fieldName, fieldInfo)\n            //      .then(function () {\n            //          self.enable();\n            //          base.resetState();\n            //          base.hide();\n            //      });\n            // }\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         modeAdd: function (allowFieldKey) {\n            // show default editor:\n            defaultEditorComponent.show(false, false);\n            _currentEditor = defaultEditorComponent;\n\n            // allow add the connect field only to import object\n            if (_currentObject.isImported) allowFieldKey = \"connectObject\";\n\n            if (allowFieldKey) {\n               var connectField = ABFieldManager.allFields().filter(\n                  (f) => f.defaults().key == allowFieldKey\n               )[0];\n               if (!connectField) return;\n               var connectMenuName = connectField.defaults().menuName;\n               $$(ids.types).setValue(connectMenuName);\n               $$(ids.types).disable();\n            }\n            // show the ability to switch data types\n            else {\n               $$(ids.types).enable();\n            }\n\n            $$(ids.types).show();\n\n            // change button text to 'add'\n            $$(ids.buttonSave).define(\"label\", L(\"Add Column\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         modeEdit: function (field) {\n            if (_currentEditor) _currentEditor.hide();\n\n            // switch to this field's editor:\n            // hide the rest\n            for (var c in _componentsByType) {\n               if (c == field.key) {\n                  _componentsByType[c].show(false, false);\n                  _componentsByType[c].populate(field);\n                  _currentEditor = _componentsByType[c];\n               } else {\n                  _componentsByType[c].hide();\n               }\n            }\n\n            // disable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var disableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).disable) {\n                     $$(elem.id).disable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  disableElem(elem);\n\n                  // disable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        disableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            // hide the ability to switch data types\n            $$(ids.types).hide();\n\n            // change button text to 'save'\n            $$(ids.buttonSave).define(\"label\", L(\"Save\"));\n            $$(ids.buttonSave).refresh();\n         },\n\n         /**\n          * @function onChange\n          * swap the editor view to match the data field selected in the menu.\n          *\n          * @param {string} name  the menuName() of the submenu that was selected.\n          */\n         onChange: function (name) {\n            // note, the submenu returns the Field.menuName() values.\n            // we use that to lookup the Field here:\n            var editor = _componentHash[name];\n            if (editor) {\n               editor.show();\n               _currentEditor = editor;\n               $$(ids.types).blur();\n            } else {\n               // most likely they clicked on the menu button itself.\n               // do nothing.\n               // OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n            }\n         },\n\n         resetState: function () {\n            // enable elements that disallow to edit\n            if (\n               _currentEditor &&\n               _currentEditor.ui &&\n               _currentEditor.ui.elements\n            ) {\n               var enableElem = (elem) => {\n                  if (elem.disallowEdit && $$(elem.id) && $$(elem.id).enable) {\n                     $$(elem.id).enable();\n                  }\n               };\n\n               _currentEditor.ui.elements.forEach((elem) => {\n                  enableElem(elem);\n\n                  // enable elements are in rows/cols\n                  var childElems = elem.cols || elem.rows;\n                  if (childElems && childElems.forEach) {\n                     childElems.forEach((childElem) => {\n                        enableElem(childElem);\n                     });\n                  }\n               });\n            }\n\n            defaultEditorComponent.show(); // show the default editor\n            _currentEditor = defaultEditorComponent;\n\n            // set the richselect to the first option by default.\n            $$(ids.types).setValue(submenus[0].id);\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {ABField} field    the ABField to edit.  If not provided, then\n          *                           this is an ADD operation.\n          * @param {string} fieldKey  allow only this field type\n          */\n         show: function (field, fieldKey) {\n            _editField = field;\n\n            if (_editField) {\n               _logic.modeEdit(field);\n            } else {\n               _logic.modeAdd(fieldKey);\n            }\n\n            $$(ids.component).show();\n         },\n\n         typeClick: function () {\n            // NOTE: for functional testing we need a way to display the submenu\n            // (functional tests don't do .hover very well)\n            // so this routine is to enable .click() to show the submenu.\n\n            var subMenuId = $$(ids.types).config.data[0].submenu;\n\n            // #HACK Sub-menu popup does not render on initial\n            // Force it to render popup by use .getSubMenu()\n            if (typeof subMenuId != \"string\") {\n               $$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n               subMenuId = $$(ids.types).config.data[0].submenu;\n            }\n\n            if ($$(subMenuId)) $$(subMenuId).show();\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.applicationLoad = _logic.applicationLoad; // {fn}     fn(ABApplication)\n      this.objectLoad = _logic.objectLoad; // {fn}     fn(ABObject)\n      this.show = _logic.show; // {fn}     fn(node, ABField)\n   }\n};\n","/*\n * ab_work_object_workspace_popupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nconst ABComponent = require(\"../AppBuilder/platform/ABComponent\");\n\nmodule.exports = class AB_Work_Object_Workspace_PopupSortFields extends ABComponent {\n   //.extend(idBase, function(App) {\n\n   constructor(App, idBase) {\n      idBase = idBase || \"ab_work_object_workspace_popupSortFields\";\n\n      super(App, idBase);\n      var L = this.Label();\n\n      // internal list of Webix IDs to reference our UI components\n      var ids = {\n         component: this.unique(`${idBase}_popupSort`),\n         list: this.unique(`${idBase}_popupSort_list`),\n         form: this.unique(`${idBase}_popupSort_form`),\n      };\n\n      // Our webix UI definition:\n      var formUI = {\n         view: \"form\",\n         id: ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: function (id, e, node) {\n                     _logic.clickAddNewSort();\n                     _logic.triggerOnChange();\n                  },\n               },\n            },\n         ],\n      };\n\n      this.ui = {\n         view: \"popup\",\n         id: ids.component,\n         // autoheight:true,\n         width: 600,\n         body: formUI,\n         on: {\n            onShow: function () {\n               _logic.onShow();\n            },\n         },\n      };\n\n      // Our init() function for setting up our UI\n      this.init = (options) => {\n         // register our callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      let CurrentObject = null;\n\n      // our internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            /**\n             * @function onChange\n             * called when we have made changes to the hidden field settings\n             * of our Current Object.\n             *\n             * this is meant to alert our parent component to respond to the\n             * change.\n             */\n            onChange: function () {},\n         },\n\n         /**\n          * @function clickAddNewSort\n          * the user clicked the add new sort buttton. I don't know what it does...will update later\n          */\n         // clickAddNewSort: function(by, dir, isMulti, id) {\n         clickAddNewSort: function (fieldId, dir) {\n            var sort_form = $$(ids.form);\n\n            var viewIndex = sort_form.getChildViews().length - 1;\n            var listFields = _logic.getFieldList(true);\n            sort_form.addView(\n               {\n                  id: \"sort\" + webix.uid(),\n                  cols: [\n                     {\n                        view: \"combo\",\n                        width: 220,\n                        options: listFields,\n                        on: {\n                           onChange: function (columnId) {\n                              var el = this;\n                              _logic.onChangeCombo(columnId, el);\n                           },\n                        },\n                     },\n                     {\n                        view: \"segmented\",\n                        width: 200,\n                        options: [\n                           {\n                              id: \"\",\n                              value: L(\"Please select field\"),\n                           },\n                        ],\n                        on: {\n                           onChange: function (newv, oldv) {\n                              // 'asc' or 'desc' values\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_danger\",\n                        icon: \"fa fa-trash\",\n                        type: \"icon\",\n                        width: 30,\n                        on: {\n                           onItemClick: function () {\n                              sort_form.removeView(this.getParentView());\n                              _logic.refreshFieldList(true);\n                              _logic.triggerOnChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               viewIndex\n            );\n\n            // Select field\n            if (fieldId) {\n               var fieldsCombo = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[0];\n               fieldsCombo.setValue(fieldId);\n            }\n            if (dir) {\n               var segmentButton = sort_form\n                  .getChildViews()\n                  [viewIndex].getChildViews()[1];\n               segmentButton.setValue(dir);\n            }\n            // if (isMulti) {\n            // \tvar isMultilingualField = sort_form.getChildViews()[viewIndex].getChildViews()[2];\n            // \tisMultilingualField.setValue(isMulti);\n            // }\n         },\n\n         /**\n          * @function getFieldList\n          * return field list so we can present a custom UI for view\n          */\n         getFieldList: function (excludeSelected) {\n            var sort_popup = $$(ids.component),\n               sort_form = $$(ids.form),\n               listFields = [];\n\n            if (!CurrentObject.fields()) return listFields;\n\n            // Get all fields include hidden fields\n            var allFields = CurrentObject.fields();\n            allFields.forEach((f) => {\n               if (f.fieldIsSortable()) {\n                  listFields.push({\n                     id: f.id,\n                     value: f.label,\n                  });\n               }\n            });\n\n            // Remove selected field\n            if (excludeSelected) {\n               var childViews = sort_form.getChildViews();\n               if (childViews.length > 1) {\n                  // Ignore 'Add new sort' button\n                  childViews.forEach(function (cView, index) {\n                     if (childViews.length - 1 <= index) return false;\n\n                     var selectedValue = cView.getChildViews()[0].getValue();\n                     if (selectedValue) {\n                        var removeIndex = null;\n                        var removeItem = listFields.filter(function (f, index) {\n                           if (f.id == selectedValue) {\n                              removeIndex = index;\n                              return true;\n                           } else {\n                              return false;\n                           }\n                        });\n                        // var removeItem = $.grep(listFields, function (f, index) {\n                        // \tif (f.id == selectedValue) {\n                        // \t\tremoveIndex = index;\n                        // \t\treturn true;\n                        // \t}\n                        // \telse {\n                        // \t\treturn false;\n                        // \t}\n                        // });\n                        listFields.splice(removeIndex, 1);\n                     }\n                  });\n               }\n            }\n            return listFields;\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         objectLoad: function (object) {\n            CurrentObject = object;\n         },\n\n         /**\n          * @method setSettings\n          *\n          * @param {Array} settings - [\n          * \t\t\t\t\t\t\t\t{\n          * \t\t\t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          *\t \t\t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t\t\t}\n          * \t\t\t\t\t\t\t]\n          */\n         setSettings: (settings) => {\n            this._settings = this.AB.cloneDeep(settings);\n         },\n\n         /**\n          * @function getSettings\n          *\n          * @return {Array} - [\n          * \t\t\t\t\t\t{\n          * \t\t\t\t\t\t\tkey: uuid,\t\t// id of ABField\n          * \t\t\t\t\t\t\tdir: string,\t// 'asc' or 'desc'\n          * \t\t\t\t\t\t}\n          * \t\t\t\t\t]\n          */\n         getSettings: function () {\n            var sort_form = $$(ids.form),\n               sortFields = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n                  sortFields.push({\n                     // \"by\":by,\n                     key: fieldId,\n                     dir: dir,\n                     // \"isMulti\":isMultiLingual\n                  });\n               });\n            }\n\n            return sortFields;\n         },\n\n         onChangeCombo: function (columnId, el) {\n            var allFields = CurrentObject.fields();\n            var columnConfig = \"\",\n               sortDir = el.getParentView().getChildViews()[1],\n               // isMultiLingual = el.getParentView().getChildViews()[2],\n               // isMulti = 0,\n               options = null;\n\n            allFields.forEach((f) => {\n               if (f.id == columnId) {\n                  columnConfig = f;\n               }\n            });\n\n            if (!columnConfig) return;\n\n            switch (columnConfig.key) {\n               case \"string\":\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n               case \"date\":\n                  options = [\n                     { id: \"asc\", value: L(\"Before -> After\") },\n                     { id: \"desc\", value: L(\"After -> Before\") },\n                  ];\n                  break;\n               case \"number\":\n                  options = [\n                     { id: \"asc\", value: L(\"1 -> 9\") },\n                     { id: \"desc\", value: L(\"9 -> 1\") },\n                  ];\n                  break;\n               default:\n                  options = [\n                     { id: \"asc\", value: L(\"A -> Z\") },\n                     { id: \"desc\", value: L(\"Z -> A\") },\n                  ];\n                  break;\n            }\n\n            sortDir.define(\"options\", options);\n            sortDir.refresh();\n\n            // if (columnConfig.settings.supportMultilingual)\n            // \tisMulti = columnConfig.settings.supportMultilingual;\n\n            // isMultiLingual.setValue(isMulti);\n\n            _logic.refreshFieldList();\n\n            _logic.triggerOnChange();\n         },\n\n         /**\n          * @function objectLoad\n          * Ready the Popup according to the current object\n          * @param {ABObject} object  the currently selected object.\n          */\n         onShow: () => {\n            var sort_form = $$(ids.form);\n\n            // clear field options in the form\n            webix.ui(formUI, sort_form);\n            // var childViews = sort_form.getChildViews();\n            // childViews.forEach(function(i, idx, array){\n            // \tif (idx !== array.length - 1){\n            // \t\tsort_form.removeView(i);\n            // \t}\n            // });\n\n            var sorts = this._settings;\n            if (sorts && sorts.forEach) {\n               sorts.forEach((s) => {\n                  _logic.clickAddNewSort(s.key, s.dir);\n               });\n            }\n\n            if (sorts == null || sorts.length == 0) {\n               _logic.clickAddNewSort();\n            }\n         },\n\n         /**\n          * @function refreshFieldList\n          * return an updated field list so you cannot duplicate a sort\n          */\n         refreshFieldList: function (ignoreRemoveViews) {\n            var sort_form = $$(ids.form),\n               listFields = _logic.getFieldList(false),\n               selectedFields = [],\n               removeChildViews = [];\n\n            var childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  if (fieldObj.length > 0) {\n                     // Add selected field to list\n                     selectedFields.push(fieldObj[0]);\n                  } else {\n                     // Add condition to remove\n                     removeChildViews.push(cView);\n                  }\n               });\n            }\n\n            // Remove filter conditions when column is deleted\n            if (!ignoreRemoveViews) {\n               removeChildViews.forEach(function (cView, index) {\n                  sort_form.removeView(cView);\n               });\n            }\n\n            // Field list should not duplicate field items\n            childViews = sort_form.getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index) return false;\n\n                  var fieldId = cView.getChildViews()[0].getValue(),\n                     // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n                     fieldObj = listFields.filter(function (f) {\n                        return f.id == fieldId;\n                     });\n\n                  // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n                  var selectedFieldsExcludeCurField = selectedFields.filter(\n                     function (x) {\n                        if (\n                           Array.isArray(fieldObj) &&\n                           fieldObj.indexOf(x) !== -1\n                        ) {\n                           return false;\n                        }\n                        return true;\n                     }\n                  );\n\n                  // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n                  var enableFields = listFields.filter(function (x) {\n                     if (\n                        Array.isArray(selectedFieldsExcludeCurField) &&\n                        selectedFieldsExcludeCurField.indexOf(x) !== -1\n                     ) {\n                        return false;\n                     }\n                     return true;\n                  });\n\n                  // Update field list\n                  cView.getChildViews()[0].define(\"options\", enableFields);\n                  cView.getChildViews()[0].refresh();\n               });\n            }\n         },\n\n         /**\n          * @function triggerOnChange\n          * This parses the sort form to build in order the sorts then saves to the application object workspace\n          */\n         triggerOnChange: () => {\n            // block .onChange callback\n            if (this._blockOnChange) return;\n\n            this._settings = _logic.getSettings();\n\n            _logic.callbacks.onChange(this._settings);\n\n            // if (CurrentView != null) {\n            // \tCurrentView.settings = CurrentView.settings || {};\n            // \tCurrentView.settings.objectWorkspace = CurrentView.settings.objectWorkspace || {};\n            // \tCurrentView.settings.objectWorkspace.sortFields = sortFields;\n            // \t_logic.callbacks.onChange(CurrentView.settings.objectWorkspace);\n            // } else {\n            // \tCurrentObject.workspaceSortFields = sortFields;\n            // \tCurrentObject.save()\n            // \t.then(function(){\n            // \t\t_logic.callbacks.onChange();\n            // \t})\n            // \t.catch(function(err){\n            // \t\tOP.Error.log('Error trying to save workspaceSortFields', {error:err, fields:sortFields });\n            // \t});\n            // }\n         },\n\n         blockOnChange: () => {\n            this._blockOnChange = true;\n         },\n\n         unblockOnChange: () => {\n            this._blockOnChange = false;\n         },\n\n         /**\n          * @function show()\n          *\n          * Show this component.\n          * @param {obj} $view  the webix.$view to hover the popup around.\n          * @param {uuid} fieldId the fieldId we want to prefill the sort with\n          */\n         show: ($view, fieldId, options) => {\n            _logic.blockOnChange();\n\n            $$(ids.component).show($view, options || null);\n\n            if (fieldId) {\n               _logic.clickAddNewSort(fieldId);\n            }\n\n            _logic.unblockOnChange();\n         },\n\n         /**\n          * @function sort()\n          * client sort data in list\n          *\n          * @param {Object} a\n          * @param {Object} b\n          */\n         sort: function (a, b) {\n            var result = 0;\n\n            var childViews = $$(ids.form).getChildViews();\n            if (childViews.length > 1) {\n               // Ignore 'Add new sort' button\n               childViews.forEach(function (cView, index) {\n                  if (childViews.length - 1 <= index || result != 0) return;\n\n                  var fieldId = cView.getChildViews()[0].getValue();\n                  var dir = cView.getChildViews()[1].getValue();\n\n                  var field = CurrentObject.fieldByID(fieldId);\n                  if (!field) return;\n\n                  var by = field.columnName; // column name\n\n                  var aValue = a[by],\n                     bValue = b[by];\n\n                  if (Array.isArray(aValue)) {\n                     aValue = (aValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (Array.isArray(bValue)) {\n                     bValue = (bValue || [])\n                        .map(function (item) {\n                           return item.text || item;\n                        })\n                        .join(\" \");\n                  }\n\n                  if (aValue != bValue) {\n                     if (dir == \"asc\") {\n                        result = aValue > bValue ? 1 : -1;\n                     } else {\n                        result = aValue < bValue ? 1 : -1;\n                     }\n                  }\n               });\n            }\n\n            return result;\n         },\n      });\n\n      // Expose any globally accessible Actions:\n      this.actions({});\n\n      //\n      // Define our external interface methods:\n      //\n      this.objectLoad = _logic.objectLoad;\n      this.show = _logic.show;\n      this.sort = _logic.sort;\n\n      this.setValue = _logic.setSettings;\n      this.getValue = _logic.getSettings;\n   }\n};\n","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message: \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(packet, {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport NetworkRest from \"./NetworkRest\";\nimport * as Sentry from \"@sentry/browser\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        console.log(`${jobID} : ${ev}:normalization begin`);\n                        let timeFrom = performance.now();\n                        model.normalizeData(data.data);\n                        let timeTo = performance.now();\n                        console.log(\n                           `${jobID} : ${ev}:normalization end:  ${\n                              timeTo - timeFrom\n                           }ms`\n                        );\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   // Wrap the call with senrty span for perfromance tracking\n   async salSend(params) {\n      const shortRoute =\n         params.url.match(/https?:\\/\\/[^/]+(\\/.+)/)?.[1] ?? params.url;\n      return Sentry.startSpan(\n         { name: shortRoute, op: \"websocket.client\" },\n         async () => await this._salSend(params)\n      );\n   }\n\n   _salSend(params) {\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  data = JSON.parse(data);\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data.status && data.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as Sentry from \"@sentry/browser\";\n\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      // const scope = new Sentry.Scope();\n      // // Mark builder alerts as lower level in sentry\n      // if (domain == \"builder\") scope.setLevel(\"warning\");\n      // scope.setTag(\"domain\", domain);\n      // scope.setContext(\"info\", info);\n      // Sentry.captureException(error, scope);\n      // console.error(error);\n      // console.error(info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   /**\n    * @method mobileApps()\n    *\n    * return an array of all the ABObjectQueries for this ABApplication.\n    *\n    * @param {fn} filter   a filter fn to return a set of ABObjectQueries that\n    *                this fn returns true for.\n    * @return {array}   array of ABObjectQueries\n    */\n   mobileApps(filter = () => true) {\n      return (this._mobileApps || []).filter(filter);\n   }\n\n   ///\n   /// Datacollections\n   ///\n\n   ///\n   /// Data collections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         result = this._pages.filter(filter);\n\n         if (result.length < 1) {\n            this._pages.forEach((p) => {\n               var subPages = p.pages(filter, deep);\n               if (subPages && subPages.length > 0) {\n                  result = subPages;\n               }\n            });\n         }\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return ABViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return ABViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @return {ABViewPage}\n    */\n   pageByID(id) {\n      return this.pages((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return ABViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (this.getCursor()?.id != (values[obj.PK()] ?? values.id))\n            return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } \n               else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         if (this.getCursor()?.id != deleteId) {\n            return;\n         }\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (followCursor?.[followDC.datasource.PK()] == currentCursor?.[this.datasource.PK()])\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               if (this.settings.loadAll) {\n                  setTimeout(() => {\n                     this.refreshLinkCursor();\n                  }, 250);\n               }\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         equals: this.labels.component.equalListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"boolean\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      if (myParameter?.[this.columnName] == \"{}\") {\n         delete myParameter[this.columnName];\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      let result = \"\";\n\n      // Decimal\n      if (options.decimalDelimiter && options.decimalSize) {\n         result = `${negativeSign}${integerValue}${\n            decimalStr\n               ? options.decimalDelimiter +\n                 decimalStr.toString().substr(0, options.decimalSize)\n               : \"\"\n         }`;\n      }\n      // Integer\n      else {\n         result = `${negativeSign}${integerValue}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      const L = this.AB.Label();\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         var currPage = this._pages.find((p) => p.id === definition.id);\n         if (currPage) {\n            this._pages = this._pages.filter((p) => p.id != currPage.id);\n            this._pages.push(currPage.refreshInstance());\n         }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         \"views\",\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\"> \n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            webix.ui(ui).start();\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\nconst ABObjectWorkspaceViewCollection = require(\"./workspaceViews/ABObjectWorkspaceViewCollection\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.workspaceViews = new ABObjectWorkspaceViewCollection(\n         attributes,\n         this,\n         AB\n      );\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = (cond.value ?? \"\").split(\",\");\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is not checked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiBooleanValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      return {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = this.formComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      // PREVENT: repeatly refresh data too often\n      if (this._getOptionsToggle) clearTimeout(this._getOptionsToggle);\n      await new Promise((resolve) => {\n         this._getOptionsToggle = setTimeout(resolve, 100);\n      });\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      const handlerOptionData = (data) => {\n         if (theEditor.$destructed) {\n            this.removeListener(\"option.data\", handlerOptionData);\n            return;\n         }\n         this.populateOptions(theEditor, data, field, form, true);\n      };\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", handlerOptionData).once(\n         \"option.data\",\n         handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let selectedVal = theEditor.getValue();\n\n         // Check exists item\n         const isExists = data.some((d) => d.id == selectedVal);\n\n         // Select option item from custom index value\n         if (\n            !isExists &&\n            field.isConnection &&\n            (field.indexField || field.indexField2)\n         ) {\n            const selectedItem = data.filter(\n               (d) =>\n                  d[field.indexField?.columnName ?? \"\"] == selectedVal ||\n                  d[field.indexField2?.columnName ?? \"\"] == selectedVal\n            )[0];\n\n            if (selectedItem) selectedVal = selectedItem.id;\n         }\n\n         theEditor.setValue(selectedVal);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor =\n         this.AB.Account?._config?.languageCode == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message: \"Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message: \"Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this,\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this,\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this,\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message: \"Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data && data[this.columnName]) {\n         const max_length = this.constructor.defaults().MAX_CHAR_LENGTH;\n\n         if (data[this.columnName].length > max_length) {\n            const L = this.AB.Label();\n            validator.addError(\n               this.columnName,\n               L(\"should NOT be longer than {0} characters\", [max_length])\n            );\n         }\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message: \"Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img src=\"${\n               row.src\n            }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views(\n            (v) => !(v instanceof ABViewFormButton) && !v.settings.isDefault\n         );\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nconst ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\nlet FilterComponent = null;\nlet SortComponent = null;\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n\n      super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n   }\n\n   onShow() {\n      super.onShow();\n\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth();\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth() {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      if (field?.key === \"string\" || field?.key === \"LongText\") {\n         $detailItem.setValues({ display: val.replace(/[<]/g, \"&lt;\") });\n\n         return;\n      }\n\n      $detailItem.setValues({ display: val });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            saveButton.enable?.();\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // for xxx->one connections we need to populate again before setting\n      // values because we need to use the selected values to add options\n      // to the UI\n      if (this?.field?.settings?.linkViaType == \"one\") {\n         this.busy();\n         await field.getAndPopulateOptions(\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n         this.ready();\n      }\n\n      if ($formItem) {\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   onShow() {\n      const settings = this.view.settings ?? {};\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(_uiFormItem.id);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if (settings.type === \"rich\" && $formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      const $item = $menu.getMenuItem(itemId);\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const PDFJS = require(\"pdfjs-dist\");\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n                  $uploader.destructor();\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await PDFJS.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar.$view.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    ).$view.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) this.datacollection.setCursor(rowId);\n\n      if (this.view) this.view.changePage(pageId);\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","// ABObjectWorkspaceView.js\n//\n// Manages the settings for a view in the AppBuilder Object Workspace\n\nmodule.exports = class ABObjectWorkspaceView {\n   constructor(attributes, object, defaultLabel) {\n      this.defaultLabel = defaultLabel || \"default view\";\n      /*\n\t{\n\t\tid:uuid(),\n\n\t}\n\n*/\n      // Note: keep this before .fromObj()\n      this.object = object;\n\n      this.fromObj(attributes || {});\n\n      // multilingual fields: label\n      this.object.translate(this, this, [\"label\"]);\n\n      // user ids.  if has user id, then only those users can see this.\n      // this.users = [];\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"view\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      this.id = data.id || this.object.AB.uuid();\n      this.isDefaultView = JSON.parse(data.isDefaultView || false);\n      this.translations =\n         data.translations ||\n         this.object.defaultTranslations([\"label\"], {\n            label: this.defaultLabel,\n         });\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      this.object.unTranslate(this, this, [\"label\"]);\n      return {\n         id: this.id,\n         translations: this.translations,\n         isDefaultView: this.isDefaultView,\n      };\n   }\n\n   update(view) {\n      for (var key in view) {\n         this[key] = view[key];\n      }\n   }\n};\n","// ABObjectWorkspaceViewCollection.js\n//\n// Manages the settings for a collection of views in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceViewGrid = require(\"./ABObjectWorkspaceViewGrid\");\nconst ABObjectWorkspaceViewKanban = require(\"./ABObjectWorkspaceViewKanban\");\nconst ABObjectWorkspaceViewGantt = require(\"./ABObjectWorkspaceViewGantt\");\n\nvar hashViews = {};\nhashViews[ABObjectWorkspaceViewGrid.type()] = ABObjectWorkspaceViewGrid;\nhashViews[ABObjectWorkspaceViewKanban.type()] = ABObjectWorkspaceViewKanban;\nhashViews[ABObjectWorkspaceViewGantt.type()] = ABObjectWorkspaceViewGantt;\n\nconst defaultAttributes = {\n   currentViewID: undefined,\n   list: [],\n};\n\nmodule.exports = class ABObjectWorkspaceViewCollection {\n   constructor(attributes, object, AB) {\n      // link me to my parent ABObject\n      this.object = object;\n      this.AB = AB;\n\n      this.fromObj(attributes);\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      // import our Workspace View Objects\n      data.objectWorkspaceViews =\n         data.objectWorkspaceViews && data.objectWorkspaceViews.list\n            ? data.objectWorkspaceViews\n            : defaultAttributes;\n\n      // Temp\n      // data.objectWorkspaceViews = defaultAttributes;\n\n      if (\n         data.objectWorkspaceViews.list.filter((v) => v.isDefaultView)\n            .length === 0\n      ) {\n         // We should always have at least one default grid view. So if this list\n         // is empty we can assume we're 'upgrading' from the old single-view workspace...\n\n         /// So we import the 'old' format workspace settings\n         if (typeof data.objectWorkspace != \"undefined\") {\n            if (typeof data.objectWorkspace.sortFields == \"undefined\")\n               data.objectWorkspace.sortFields = [];\n            if (typeof data.objectWorkspace.filterConditions == \"undefined\")\n               data.objectWorkspace.filterConditions = [];\n            if (typeof data.objectWorkspace.frozenColumnID == \"undefined\")\n               data.objectWorkspace.frozenColumnID = \"\";\n            if (typeof data.objectWorkspace.hiddenFields == \"undefined\")\n               data.objectWorkspace.hiddenFields = [];\n         }\n\n         // ...and initialize our grid view attributes\n         var gridAttributes = data.objectWorkspace || {\n            sortFields: [], // array of columns with their sort configurations\n            filterConditions: [], // array of filters to apply to the data table\n            frozenColumnID: \"\", // id of column you want to stop freezing\n            hiddenFields: [], // array of [ids] to add hidden:true to\n         };\n         gridAttributes.isDefaultView = true;\n\n         var defaultGrid = new ABObjectWorkspaceViewGrid(\n            gridAttributes,\n            this.object\n         );\n         data.objectWorkspaceViews.list.unshift(defaultGrid);\n      }\n\n      this.importViews(data.objectWorkspaceViews);\n\n      this.currentViewID = data.objectWorkspaceViews.currentViewID;\n      if (!this.currentViewID) {\n         this.currentViewID = this.list()[0].id;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         currentViewID: this.currentViewID,\n         list: this.exportViews(),\n      };\n   }\n\n   list(fn = () => true) {\n      return this._views.filter(fn);\n   }\n\n   importViews(viewSettings) {\n      this._views = [];\n      viewSettings.list.forEach((view) => {\n         this.addView(view, false);\n      });\n   }\n\n   exportViews() {\n      var views = [];\n      this._views.forEach((view) => {\n         views.push(view.toObj());\n      });\n\n      return views;\n   }\n\n   setCurrentView(viewID) {\n      this.currentViewID = viewID;\n   }\n\n   getCurrentView() {\n      return this.list((v) => {\n         return v.id == this.currentViewID;\n      })[0];\n   }\n\n   addView(view, save = true) {\n      var newView = new hashViews[view.type](view, this.object);\n      this._views.push(newView);\n      if (save) {\n         this.object.save();\n      }\n      return newView;\n   }\n\n   removeView(view) {\n      var indexToRemove = this._views.indexOf(view);\n      this._views.splice(indexToRemove, 1);\n      if (view.id === this.currentViewID) {\n         this.currentViewID = this._views[0].id;\n      }\n      this.object.save();\n   }\n\n   updateView(viewToUpdate, view) {\n      var newView;\n      if (view.type === viewToUpdate.type) {\n         viewToUpdate.update(view);\n         newView = viewToUpdate;\n      } else {\n         newView = new hashViews[view.type](view, this.object);\n         var indexToRemove = this._views.indexOf(viewToUpdate);\n         this._views.splice(indexToRemove, 1, newView);\n         if (this.currentViewID === viewToUpdate.id) {\n            this.currentViewID = newView.id;\n         }\n      }\n      this.object.save();\n      return newView;\n   }\n};\n","// ABObjectWorkspaceViewComponent.js\n//\n\nmodule.exports = class ABObjectWorkspaceViewComponent {\n   constructor(options) {\n      this.elements =\n         options.elements ||\n         function () {\n            return [];\n         };\n      this.init = options.init || function () {};\n      this.validate =\n         options.validate ||\n         function () {\n            return true;\n         };\n      this.values =\n         options.values ||\n         function () {\n            return {};\n         };\n      this.logic = options.logic || {};\n   }\n};\n","// ABObjectWorkspaceViewGantt.js\n//\n// Manages the settings for a Gantt Chart View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldDate = require(\"../dataFields/ABFieldDate\");\nconst ABFieldNumber = require(\"../dataFields/ABFieldNumber\");\nconst ABFieldString = require(\"../dataFields/ABFieldString\");\nconst ABFieldLongText = require(\"../dataFields/ABFieldLongText\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar defaultValues = {\n   name: \"Default Gantt\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   title: \"none\", // id of a ABFieldString, ABFieldLongText\n   startDate: null, // id of a ABFieldDate\n   endDate: \"none\", // id of a ABFieldDate\n   duration: \"none\", // id of a ABFieldNumber\n   progress: \"none\", // id of a ABFieldNumber\n   notes: \"none\", // id of a ABFieldString, ABFieldLongText\n};\n\nmodule.exports = class ABObjectWorkspaceViewGantt extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"gantt\");\n\n      /*\n         {\n            id:uuid(),\n            type:'gantt',  \n            filterConditions:[],\n         }\n      \n      */\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"gantt\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-tasks\";\n   }\n\n   static component(App, idBase) {\n      let ids = {\n         title: App.unique(`${idBase}_popupGanttTitle`),\n         startDate: App.unique(`${idBase}_popupGanttStartDate`),\n         endDate: App.unique(`${idBase}_popupGanttEndDate`),\n         duration: App.unique(`${idBase}_popupGanttDuration`),\n         progress: App.unique(`${idBase}_popupGanttProgress`),\n         notes: App.unique(`${idBase}_popupGanttNotes`),\n      };\n\n      let refreshOptions = (object, view) => {\n         let dateFields = object\n            .fields((f) => f instanceof ABFieldDate)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Start date\n         $$(ids.startDate).define(\"options\", dateFields);\n\n         // Add default option\n         dateFields.unshift({\n            id: \"none\",\n            value: L(\"Select a date field\"),\n         });\n\n         // End date\n         $$(ids.endDate).define(\"options\", dateFields);\n\n         // Duration\n         let numberFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         numberFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.duration).define(\"options\", numberFields);\n\n         // Progress\n         let decimalFields = object\n            .fields((f) => f instanceof ABFieldNumber)\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         decimalFields.unshift({\n            id: \"none\",\n            value: L(\"Select a number field\"),\n         });\n         $$(ids.progress).define(\"options\", decimalFields);\n\n         // Title & Notes\n         let stringFields = object\n            .fields(\n               (f) => f instanceof ABFieldString || f instanceof ABFieldLongText\n            )\n            .map(({ id, label }) => ({ id, value: label }));\n\n         // Add default option\n         stringFields.unshift({\n            id: \"none\",\n            value: L(\"Select a string field\"),\n         });\n         $$(ids.title).define(\"options\", stringFields);\n         $$(ids.notes).define(\"options\", stringFields);\n\n         // Select view's values\n         if (view && view.title) {\n            $$(ids.title).define(\"value\", view.title);\n            $$(ids.title).refresh();\n         }\n\n         if (view && view.startDate) {\n            $$(ids.startDate).define(\"value\", view.startDate);\n            $$(ids.startDate).refresh();\n         }\n\n         if (view && view.endDate) {\n            $$(ids.endDate).define(\n               \"value\",\n               view.endDate || defaultValues.endDate\n            );\n            $$(ids.endDate).refresh();\n         }\n\n         if (view && view.duration) {\n            $$(ids.duration).define(\n               \"value\",\n               view.duration || defaultValues.duration\n            );\n            $$(ids.duration).refresh();\n         }\n\n         if (view && view.progress) {\n            $$(ids.progress).define(\"value\", view.progress);\n            $$(ids.progress).refresh();\n         }\n\n         if (view && view.notes) {\n            $$(ids.notes).define(\"value\", view.notes);\n            $$(ids.notes).refresh();\n         }\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         App,\n         `${idBase}_gantt`\n      );\n\n      let ViewComponent = new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"gantt\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.title,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Title\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"title\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldString.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.startDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"Start Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"startDate\",\n                           required: true,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.endDate,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-calendar'></span> ${L(\n                              \"End Date\"\n                           )}`,\n                           placeholder: L(\"Select a date field\"),\n                           labelWidth: 130,\n                           name: \"endDate\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldDate.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.duration,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Duration\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"duration\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.progress,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-hashtag'></span> ${L(\n                              \"Progress\"\n                           )}`,\n                           placeholder: L(\"Select a number field\"),\n                           labelWidth: 130,\n                           name: \"progress\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldNumber.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           id: ids.notes,\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-align-right'></span> ${L(\n                              \"Notes\"\n                           )}`,\n                           placeholder: L(\"Select a string field\"),\n                           labelWidth: 130,\n                           name: \"notes\",\n                           required: false,\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldLongText.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            if (!object) return;\n\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         validate: function ($form) {\n            let endDate = $$(ids.endDate).getValue() || defaultValues.endDate,\n               duration = $$(ids.duration).getValue() || defaultValues.duration;\n\n            if (\n               endDate == defaultValues.endDate &&\n               duration == defaultValues.duration\n            ) {\n               $form.markInvalid(\"endDate\", \"Required\");\n               $form.markInvalid(\"duration\", \"Required\");\n\n               return false;\n            } else {\n               return true;\n            }\n         },\n\n         values: function () {\n            let result = {};\n\n            result.title = $$(ids.title).getValue() || defaultValues.title;\n            result.startDate =\n               $$(ids.startDate).getValue() || defaultValues.startDate;\n            result.endDate =\n               $$(ids.endDate).getValue() || defaultValues.endDate;\n            result.duration =\n               $$(ids.duration).getValue() || defaultValues.duration;\n            result.progress =\n               $$(ids.progress).getValue() || defaultValues.progress;\n            result.notes = $$(ids.notes).getValue() || defaultValues.notes;\n\n            return result;\n         },\n\n         logic: {},\n      });\n\n      return ViewComponent;\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGantt.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewGantt.type();\n      return obj;\n   }\n\n   get titleField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.title);\n   }\n\n   get startDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.startDate);\n   }\n\n   get endDateField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.endDate);\n   }\n\n   get durationField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.duration);\n   }\n\n   get progressField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.progress);\n   }\n\n   get notesField() {\n      let viewCollection = this.object,\n         object = viewCollection.object;\n\n      return object.fieldByID(this.notes);\n   }\n};\n","// ABObjectWorkspaceViewGrid.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\n\nvar defaultValues = {\n   name: \"Default Grid\",\n   sortFields: [], // array of columns with their sort configurations\n   filterConditions: [], // array of filters to apply to the data table\n   frozenColumnID: \"\", // id of column you want to stop freezing\n   hiddenFields: [], // array of [ids] to add hidden:true to\n};\n\nmodule.exports = class ABObjectWorkspaceViewGrid extends ABObjectWorkspaceView {\n   constructor(attributes, object) {\n      super(attributes, object, \"grid\");\n\n      /*\n\t{\n\t\tid:uuid(),\n\t\ttype:'grid',  \n\t\tsortFields:[],\n\t\tfilterConditions:[],\n\t\tfrozenColumnID:\"\",\n\t\thiddenFields:[],\n\t}\n\n*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"grid\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-table\";\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewGrid.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = \"grid\";\n      return obj;\n   }\n};\n","// ABObjectWorkspaceViewKanban.js\n//\n// Manages the settings for a Data Grid View in the AppBuilder Object Workspace\n\nconst ABObjectWorkspaceView = require(\"./ABObjectWorkspaceView\");\nconst ABObjectWorkspaceViewComponent = require(\"./ABObjectWorkspaceViewComponent\");\n\nconst ABPopupNewDataField = require(\"../../../ABDesigner/ab_work_object_workspace_popupNewDataField\");\n\nconst ABFieldConnect = require(\"../dataFields/ABFieldConnect\");\nconst ABFieldList = require(\"../dataFields/ABFieldList\");\nconst ABFieldUser = require(\"../dataFields/ABFieldUser\");\n\nvar defaultValues = {\n   name: \"Default Kanban\",\n   filterConditions: [], // array of filters to apply to the data table\n   sortFields: [],\n   verticalGroupingField: null,\n   horizontalGroupingField: null,\n   ownerField: null,\n};\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectWorkspaceViewKanban extends (\n   ABObjectWorkspaceView\n) {\n   constructor(attributes, object) {\n      super(attributes, object, \"kanban\");\n\n      /*\n\t\t\t{\n\t\t\t\tid:uuid(),\n\t\t\t\ttype:'kanban',  \n\t\t\t\tfilterConditions:[],\n\t\t\t}\n\t\t\n\t\t*/\n   }\n\n   /**\n    * unique key describing this View.\n    * @return {string}\n    */\n   static type() {\n      return \"kanban\";\n   }\n\n   /**\n    * @return {string}\n    */\n   static icon() {\n      return \"fa fa-columns\";\n   }\n\n   static component(AB, idBase) {\n      let ids = {\n         vGroupInput: `${idBase}_popupAddViewVGroup`,\n         hGroupInput: `${idBase}_popupAddViewHGroup`,\n         ownerInput: `${idBase}_popupAddViewOwner`,\n      };\n\n      // let labels = {\n      //    common: App.labels,\n      //    component: {\n      //       vGroup: L(\"ab.add_view.kanban.vGroup\", \"*Vertical Grouping\"),\n      //       hGroup: L(\"ab.add_view.kanban.hGroup\", \"*Horizontal Grouping\"),\n      //       owner: L(\"ab.add_view.kanban.owner\", \"*Card Owner\"),\n      //       groupingPlaceholder: L(\n      //          \"ab.add_view.kanban.grouping_placeholder\",\n      //          \"*Select a field\"\n      //       ),\n      //       ownerPlaceholder: L(\n      //          \"ab.add_view.kanban.owner_placeholder\",\n      //          \"*Select a user field\"\n      //       ),\n      //       noneOption: L(\"ab.add_view.kanban.none_option\", \"*None\"),\n      //    },\n      // };\n\n      let refreshOptions = (object, view, options = {}) => {\n         // Utility function to initialize the options for a field select input\n         const initSelect = (\n            $option,\n            attribute,\n            filter = (f) => f.key === ABFieldList.defaults().key,\n            isRequired\n         ) => {\n            if ($option == null || object == null) return;\n\n            // populate options\n            var options = object\n               .fields()\n               .filter(filter)\n               .map(({ id, label }) => ({ id, value: label }));\n            if (!isRequired && options.length) {\n               options.unshift({\n                  id: 0,\n                  value: L(\"None\"),\n               });\n            }\n            $option.define(\"options\", options);\n\n            // select a value\n            if (view) {\n               if (view[attribute]) {\n                  $option.define(\"value\", view[attribute]);\n               } else if (!isRequired && options[0]) {\n                  $option.define(\"value\", options[0].id);\n               }\n            } else if (options.filter((o) => o.id).length === 1) {\n               // If there's just one (real) option, default to the first one\n               $option.define(\"value\", options[0].id);\n            }\n\n            $option.refresh();\n         };\n\n         const verticalGroupingFieldFilter = (field) =>\n            [ABFieldList.defaults().key, ABFieldUser.defaults().key].includes(\n               field.key\n            );\n\n         const horizontalGroupingFieldFilter = (field) =>\n            [\n               ABFieldConnect.defaults().key,\n               ABFieldList.defaults().key,\n               ABFieldUser.defaults().key,\n            ].includes(field.key);\n\n         initSelect(\n            options.vGroupInput || $$(ids.vGroupInput),\n            \"verticalGroupingField\",\n            verticalGroupingFieldFilter,\n            true\n         );\n         initSelect(\n            options.hGroupInput || $$(ids.hGroupInput),\n            \"horizontalGroupingField\",\n            horizontalGroupingFieldFilter,\n            false\n         );\n         initSelect(\n            options.ownerInput || $$(ids.ownerInput),\n            \"ownerField\",\n            (f) => {\n               // User field\n               return (\n                  f.key === ABFieldUser.defaults().key ||\n                  // Connected field : type 1:M\n                  (f.key === ABFieldConnect.defaults().key &&\n                     f.settings.linkType == \"one\" &&\n                     f.settings.linkViaType == \"many\")\n               );\n            },\n            false\n         );\n      };\n\n      var PopupNewDataFieldComponent = new ABPopupNewDataField(\n         AB,\n         `${idBase}_kanban`\n      );\n\n      return new ABObjectWorkspaceViewComponent({\n         elements: () => {\n            return {\n               batch: \"kanban\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-columns'></span> ${L(\n                              \"Vertical Grouping\"\n                           )}`,\n                           id: ids.vGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"vGroup\",\n                           required: true,\n                           options: [],\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.vGroupInput).validate();\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                           invalidMessage: L(\"Required\"),\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-list'></span> ${L(\n                              \"Horizontal Grouping\"\n                           )}`,\n                           id: ids.hGroupInput,\n                           placeholder: L(\"Select a field\"),\n                           labelWidth: 180,\n                           name: \"hGroup\",\n                           required: false,\n                           options: [],\n                           invalidMessage: L(\n                              \"Cannot be the same as vertical grouping field\"\n                           ),\n                           validate: (value) => {\n                              var vGroupValue = $$(ids.vGroupInput).getValue();\n                              return (\n                                 !vGroupValue || !value || vGroupValue !== value\n                              );\n                           },\n                           on: {\n                              onChange: function (id) {\n                                 $$(ids.hGroupInput).validate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldList.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     cols: [\n                        {\n                           view: \"richselect\",\n                           label: `<span class='webix_icon fa fa-user-circle'></span> ${L(\n                              \"Card Owner\"\n                           )}`,\n                           placeholder: L(\"Select a user field\"),\n                           id: ids.ownerInput,\n                           labelWidth: 180,\n                           name: \"owner\",\n                           options: [],\n                        },\n                        {\n                           view: \"button\",\n                           css: \"webix_primary\",\n                           type: \"icon\",\n                           icon: \"fa fa-plus\",\n                           label: \"\",\n                           width: 20,\n                           click: () => {\n                              PopupNewDataFieldComponent.show(\n                                 null,\n                                 ABFieldConnect.defaults().key\n                              );\n                           },\n                        },\n                     ],\n                  },\n               ],\n            };\n         },\n\n         init: (object, view) => {\n            refreshOptions(object, view);\n\n            PopupNewDataFieldComponent.applicationLoad(object.application);\n            PopupNewDataFieldComponent.objectLoad(object);\n            PopupNewDataFieldComponent.init({\n               onSave: () => {\n                  // be notified when a new Field is created & saved\n\n                  refreshOptions(object, view);\n               },\n            });\n         },\n\n         values: function () {\n            let result = {};\n\n            result.verticalGroupingField =\n               $$(ids.vGroupInput).getValue() || null;\n            result.horizontalGroupingField =\n               $$(ids.hGroupInput).getValue() || null;\n            result.ownerField = $$(ids.ownerInput).getValue() || null;\n\n            return result;\n         },\n\n         logic: {\n            refreshOptions: refreshOptions,\n         },\n      });\n   }\n\n   /**\n    * @method fromObj\n    * take our persisted data, and properly load it\n    * into this object instance.\n    * @param {json} data  the persisted data\n    */\n   fromObj(data) {\n      super.fromObj(data);\n\n      for (var v in defaultValues) {\n         this[v] = data[v] || defaultValues[v];\n      }\n\n      this.type = ABObjectWorkspaceViewKanban.type();\n   }\n\n   /**\n    * @method toObj()\n    * compile our current state into a {json} object\n    * that can be persisted.\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      for (var v in defaultValues) {\n         obj[v] = this[v];\n      }\n\n      obj.type = ABObjectWorkspaceViewKanban.type();\n      return obj;\n   }\n\n   getHorizontalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.horizontalGroupingField);\n   }\n\n   getVerticalGroupingField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.verticalGroupingField);\n   }\n\n   getOwnerField() {\n      let viewCollection = this.object, // Should use another name property ?\n         object = viewCollection.object;\n\n      return object.fieldByID(this.ownerField);\n   }\n};\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABEmitter {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   constructor(App) {\n      super();\n\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var _this = this;\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: function (config) {\n            var formComponents = config.formComponents\n               ? config.formComponents\n               : {};\n            var formData = config.formData ? config.formData : {};\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  var newD = [];\n                  formData[data].forEach((item) => {\n                     if (item.id) newD.push(item.id);\n                  });\n                  formData[data] = newD;\n               }\n            }\n\n            Formio.createForm(this.$view, formComponents, {\n               // readOnly: true\n               // sanitizeConfig: {\n               //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n               //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n               // }\n            }).then(function (form) {\n               // now that it is set up we can push it into the global var\n               // formBuilder = builder;\n               // Provide a default submission.\n               form.submission = {\n                  data: formData,\n               };\n               (formComponents.components || []).forEach((comp) => {\n                  if (\n                     comp.type == \"button\" &&\n                     comp.action == \"event\" &&\n                     comp.event\n                  ) {\n                     form.once(comp.event, function (click) {\n                        config.onButton ? config.onButton(comp.event) : null;\n                        // _this.emit(\"button\", comp.event);\n                     });\n                  }\n               });\n               // form.submission = {\n               //     data: {\n               //         Name: \"Item #5\",\n               //         Image: \"4f2be24f-6ad0-4687-abbb-1a87ce7bc1d6\",\n               //         \"Long text\": \"This is a long text field.\",\n               //         \"Number Field\": 3,\n               //         \"Date Field\": \"2020-02-03\",\n               //         \"Date and Time\": \"2020-02-19 00:00:00\",\n               //         \"Checkbox field\": 1,\n               //         \"Items to select\": 1580782610224,\n               //         \"Multiple Items\": [1580786381276, 1580786381494],\n               //         \"Email Field\": \"james@digiserve.org\",\n               //         \"Image Field\":\n               //             \"d5063af3-06b0-44d0-ae9d-c88a74b81e21\",\n               //         \"File Attachment\":\n               //             '{\"uuid\":\"2d3708eb-d567-483b-9b1e-7cbd6d654866\",\"filename\":\"2018-01-12 09-44 copy.pdf\"}',\n               //         \"User Field\": \"James\"\n               //     }\n               // };\n            });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.view);\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ABComponent","ABFieldManager","constructor","App","idBase","super","L","this","Label","ids","component","unique","types","editDefinitions","buttonSave","buttonCancel","ui","view","position","resize","modal","height","width","head","css","cols","label","align","autowidth","click","_logic","body","scroll","borderless","type","rows","labelWidth","AB","UISettings","config","labelWidthLarge","options","on","onChange","ev","node","padding","cells","fillspace","value","onHide","resetState","_objectHash","_componentHash","_componentsByType","_currentEditor","_currentObject","defaultEditorComponent","submenus","_editField","init","c","callbacks","webix","extend","$$","ProgressBar","Fields","allFields","newEditorList","animate","forEach","F","menuName","defaults","key","push","editorComponent","propertiesComponent","define","refresh","hide","show","setValue","applicationLoad","application","objectLoad","object","clear","async","disable","showProgress","editor","isValid","linkCol","vals","cloneDeep","values","field","oldData","toObj","updateValues","keySetting","fromValues","fieldNew","length","settings","showIcon","rand","Math","floor","random","isSource","linkObject","datasourceLink","linkColumnName","columnName","fields","f","linkType","linkViaType","name","isCustomFK","indexField","indexField2","validator","fail","updateForm","enable","hideProgress","save","finishUpdateField","onSave","refreshModels","model","linkColumn","migrateCreate","err","notify","developer","onCancel","console","warn","modeAdd","allowFieldKey","isImported","connectField","filter","connectMenuName","modeEdit","populate","elements","disableElem","elem","disallowEdit","childElems","childElem","blur","enableElem","fieldKey","typeClick","subMenuId","data","submenu","getSubMenu","actions","list","form","formUI","onItemClick","clickAddNewSort","triggerOnChange","onShow","CurrentObject","fieldId","dir","sort_form","viewIndex","getChildViews","listFields","getFieldList","addView","uid","columnId","onChangeCombo","newv","oldv","icon","removeView","getParentView","refreshFieldList","excludeSelected","fieldIsSortable","childViews","cView","index","selectedValue","getValue","removeIndex","splice","setSettings","_settings","getSettings","sortFields","el","columnConfig","sortDir","sorts","s","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","x","Array","isArray","indexOf","enableFields","_blockOnChange","blockOnChange","unblockOnChange","$view","sort","a","b","result","fieldByID","by","aValue","bValue","item","text","join","EventEmitter","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","context","error","emit","Promise","canSwitcheroo","r","uuid","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","fn","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","alert","title","Multilingual","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","postMissing","arguments","replace","newKey","slice","postMissingLabel","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","then","catch","toString","setTimeout","destroy","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","useThese","search","val","encodeURIComponent","_request","put","delete","isNetworkConnected","salSend","packet","_retry","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","io","socket","obj","objectByID","objectId","jobID","timeFrom","performance","now","normalizeData","timeTo","isConnected","shortRoute","match","op","_salSend","toLowerCase","request","jwres","statusCode","errStr","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","remove","clearAll","_storage","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","toValidationObject","invalidAttributes","attr","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","errorSailsCleanup","raw","hasFocused","attrs","wasForm","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","rest","emitData","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","mobileApps","_mobileApps","datacollectionsExcluded","datacollections","datacollectionsIncluded","sortFn","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","linkedObjects","currObjID","linkedObjectID","linkedFields","deep","subPages","processes","hasProcess","process","views","_views","subViews","lookDeep","pageViews","concat","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","DefaultValues","query","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","loadAll","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","undefined","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","pos","DC","event","reloadData","parseTreeCollection","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","followDC","followCursor","currentCursor","eventRemove","start","limit","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","unshift","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","__filterDatacollection","__filterScope","scopeList","userScopes","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplication","ABDefinition","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","curr","applicationByID","ID","applicationNew","datacollectionNew","newField","indexNew","objectNew","isExternal","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","param","responses","processedIDs","apply","AllViews","Views","default","common","V","getFieldVal","isNaN","condition","_QueryFields","_Fields","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","fieldsAddFiltersString","opt","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","isComplete","noValueRules","isCompleteRules","returnSingular","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","round","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","required","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","components","abFieldID","path","pluck","comp","action","myID","listField","ABProcessTaskUserDefaults","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","labelKey","ABViewCSVExporterPropertyComponentDefaults","dataviewID","buttonLabel","hasHeader","ABRecordRule","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","recordRules","RecordRule","_recordRule","formLoad","fromSettings","doRecordRulesPre","rowDatas","processPre","doRecordRules","ABViewCarouselPropertyComponentDefaults","showLabel","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","ABViewDefaults","parseIntOrDefault","_this","parseOrDefault","componentList","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","labelPosition","multipleSeries","ABViewChartDefaults","viewsToAllow","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","findIndex","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","ABPropertyComponentDefaults","columns","gravity","movable","viewsSortByPosition","y","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","accessLevels","viewIDs","isRoot","dx","dy","allParents","parents","curView","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","urlView","errNoDCID","errNoDC","updateAccessLevels","roleId","viewDestroy","viewRemove","viewInsert","viewReorder","viewId","toPosition","allViewDeletes","lookUpIds","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","copy","newName","allSaves","p2","vi","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","formView","ABViewDetailDefaults","addFieldToDetail","yPosition","detailComponent","newInstance","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","popupWidth","popupHeight","ABViewFormConnectDefaults","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","clearOnLoad","clearOnSave","displayRules","editForm","submitRules","fieldComponents","flattenComponents","addFieldToForm","fieldComponent","formComponent","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABViewFormDatepickerPropertyComponentDefaults","timepicker","ABViewFormDatepickerDefaults","ABViewFormFieldPropertyComponentDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","isStepper","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","ABViewFormTextboxDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewListPropertyComponentDefaults","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","page","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getMenuItem","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","myAppID","allPageDeletes","allPages","pageRemove","pageInsert","updateIcon","mapNewIdFn","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","currPage","refreshInstance","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","CustomComponentManager","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","checked","onPrevious","delay","ABIndexCore","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","ABObjectWorkspaceViewCollection","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","checkedCondition","notCheckedCondition","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiBooleanValue","uiUserValue","uiNoneValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","onAfterRender","queryView","style","zIndex","isQueryField","u","linkObjectId","placeholder","processFieldKey","pField","popUp","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFilterUI","isolate","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","$viewCond","selectField","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","toggleForm","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","ABFieldAutoIndexCore","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsToggle","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","linkedField","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","selectedVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","items","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","max_length","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","newLinkDef","setDisplayOptions","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","viewsToIgnore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","abWebix","onclick","getNode","fullscreen","exit","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","refreshDefaultButton","defaultButton","yList","posY","getFormValues","dcLink","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","rulesReady","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","__filterComponent","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","removeAllListeners","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","uiForm","chosenField","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onClear","cancelButton","noPopupFilter","pageCurr","resetButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","setHTML","tagMode","tagTemplate","selectedOptions","menubar","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","PDFJS","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","defaultLabel","isDefaultView","ABObjectWorkspaceViewGrid","ABObjectWorkspaceViewKanban","ABObjectWorkspaceViewGantt","hashViews","defaultAttributes","currentViewID","gridAttributes","defaultGrid","importViews","exportViews","viewSettings","setCurrentView","indexToRemove","updateView","viewToUpdate","ABObjectWorkspaceView","ABObjectWorkspaceViewComponent","ABPopupNewDataField","ABFieldDate","ABFieldString","ABFieldLongText","duration","progress","refreshOptions","numberFields","decimalFields","stringFields","PopupNewDataFieldComponent","titleField","startDateField","endDateField","durationField","progressField","notesField","vGroupInput","hGroupInput","ownerInput","initSelect","$option","isRequired","vGroupValue","getHorizontalGroupingField","getVerticalGroupingField","getOwnerField","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","$init","formComponents","newD","Formio","createForm","submission","onButton","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","eachRow","$count","master"],"sourceRoot":""}