{"version":3,"file":"AB.e77613aa3fb3110f7cb2.js","mappings":"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AAY,GCzCf,GACGpC,OAAQ,WAEL,OAAI3C,OAAOgF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,mBC3uBN,MAAMC,EACHjS,YAAYS,GACTP,KAAKO,GAAKA,EACVP,KAAKgS,OAAS,EACjB,CAEAC,SAASC,EAAMxO,GACZ1D,KAAKgS,OAAO9K,KAAK,CAAEgL,KAAMA,EAAMxO,QAASA,GAC3C,CAEAyO,OACG,OAA6B,GAAtBnS,KAAKgS,OAAOpQ,MACtB,CAEAwQ,OACG,OAAOpS,KAAKgS,OAAOpQ,OAAS,CAC/B,CAEAyQ,qBACG,IAAIpH,EAAM,CACP3J,MAAO,eACPgR,kBAAmB,CAAC,GAGnBC,EAAOtH,EAAIqH,kBAOf,OALAtS,KAAKgS,OAAOlM,SAASzG,IAClBkT,EAAKlT,EAAE6S,MAAQK,EAAKlT,EAAE6S,OAAS,GAC/BK,EAAKlT,EAAE6S,MAAMhL,KAAK7H,EAAE,IAGhB4L,CACV,CAEAuH,WAAWC,GACR,IAAIC,EAAO1S,KAAKqS,qBAChBrS,KAAKO,GAAGoS,WAAWC,sBAAsBF,EAAMD,EAClD,CAEAI,WAAWC,EAAOC,GACf,IAAIL,EAAO1S,KAAKqS,qBAChBrS,KAAKO,GAAGoS,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH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,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-ps\": 68634,\n\t\"./ar-ps.js\": 68634,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku-kmr\": 36063,\n\t\"./ku-kmr.js\": 36063,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         ) {\n            return;\n         }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor(true);\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         return curr;\n      }\n      return null;\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = this.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         if (this.fieldLink?.linkType() == \"many\") {\n            linkRule.rule = \"contains\";\n         }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if (filter.rules.length > 0) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result = value == false || value <= 0 || value == \"false\" || value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {}\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         const newImgElm = imgElm.cloneNode(true);\n         imgElm.parentNode.replaceChild(newImgElm, imgElm);\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks)\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth)\n         parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\"abbr\", \"acronym\", \"b\", \"blockquote\", \"br\", \"code\", \"div\", \"em\", \"i\", \"li\", \"ol\", \"p\", \"span\", \"strong\", \"table\", \"td\", \"tr\", \"ul\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\"];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\":\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(new RegExp(`(&lt;(\\/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"), \"<$2$3\");\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData?.[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      }\n      else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","delete","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","ev","io","socket","obj","objectByID","objectId","model","jobID","performance","op","normalizeData","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","name","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","async","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","followDC","followCursor","eventRemove","whereCleanUp","newValue","cleanRule","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","splice","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","getRelationValue","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","linkType","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","field","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","position","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","newInstance","RecordRule","_recordRule","formLoad","fromSettings","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","allFields","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","zoom","showFilterPopup","showPopup","direction","imgElm","getElementById","newImgElm","cloneNode","replaceChild","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","refreshFieldList","cView","selectedValue","chosenField","sortDir","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","includeDelete","deleteLabel","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","deleteData","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","showPage","fileBlob","_toBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}